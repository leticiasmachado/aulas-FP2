<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h = "http://xmlns.jcp.org/jsf/html">
    <head>
        <title>FP2</title>
        <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
        <link rel="stylesheet" type="text/css" href="estilo1.css"/>
    </head>
    <body>
        <h1 id="titulo"> Aula 1 - Configuração Inicial do Projeto (09/02/2023) </h1>
        <h3> Configuração do java e dos plugins </h3>
        <div class ="text">
            <ul>
                <li>Verificar se a versão do java e do javac estão iguais via terminal. Comandos: <u><i>java -version</i></u> e <u><i>javac -version</i></u></li>
                <li>Caso necessário, altere a versão do java ou javac. Comando: <u><i>sudo update-alternatives –config java</i></u> e <u><i>sudo update-alternatives config javac</i></u></li>
                <li>Aparecerão as alternativas do java instaladas, selecione a que desejar, lembrando de deixar os dois na mesma versão</li>
                <li>Versão recomendada: java 11</li>
            </ul>
            <p>
                Após isso, garantir que os seguintes plugins (no menu "Tools") estejam instalados e ativados no NetBeans: </p>
            <ul>
                <li>HTML5</li>
                <li>User Installed Plugins</li>
                <li>Java SE</li>
                <li>Java Web EE</li>
                <li>Developing NetBeans</li>
                <li>Base IDE</li>
            </ul>
        </div>

        <h3>Configuração do servidor</h3>
        <div class ="text">
            <p>Para criar um servidor, vá no menu "Tools" e selecione "Servers". "Add server" e selecione qual será o seu tipo (GlassFish ou Payara). 
                A configuração da página seguinte deve estar desse jeito: </p>
            <p class = "img">
                <img src="img/foto1.png" />
            </p>
            <br />
            Faça o download do servidor através do NetBeans. Clique em "next" e depois "finish". Com o servidor criado, na aba de 
            serviços: botão direito no servidor e start. Entrar no localhost/4848 no navegador para verificar se o processo funcionou.
            Portas que o servidor GlassFish trabalha: <br/>
            <u class="localhost">localhos/4848</u> = administrador do servidor <br/>
            <u class="localhost">localhost/8080</u> = HTTP <br/>
            <u class="localhost">localhost/8181</u> = HTTPS <br/>
        </div>

        <h3>Configuração de criação do projeto</h3>
        <div class="text">
            <p>
                New project → Java Web → Web Application → next → next→ selecionar servidor e versão do Java EE → next → finish. 
                Os frameworks serão adicionados posteriormente e manualmente. Adicionar biblioteca Jakarta EE Web 9 API Library. Nas propriedades do projeto,
                vamos desabilitar o deploy automático sempre que salvamos, para evitar que o projeto gaste recursos desnecessários.
            </p>
        </div>

        <h3>Desativar deploy automático</h3>
        <div class="text">
            <p>
                Botão direito no projeto → propriedades → menu "run" → desativar opção “deploy on save”.
                Sendo assim, quando quiser atualizar a aplicação na página HTTP, será necessário clicar com botão direito no projeto → deploy.
            </p>
        </div>

        <h3>Gerar arquivo Web.xml</h3>
        <div class="text">
            <p>
                Para criar um arquivo de configuração que funcione corretamente, utilizamos: <br/>
                New → other → pesquisar "web.xml" → selecionar "standard deployment despriptor" → next → finish.
                Esse arquivo possui configurações específico descrito abaixo:
                <br/>
                <div class="img">
                    <iframe src="codigos/codigo1.txt" height="360" width="1200"></iframe>
                </div>
            </p>
        </div>

        <h3>Arquivo Xhtml</h3>
        <div class="text">
            <p>Será necessário criar um arquivo .xhtml para utilizar o JSF que possui componentes além do html. Para incluir o JSF, 
                devemos declarar a tag HTML da seguinte maneira: 
                <br/>
                <div class="img">
                    <iframe src="codigos/codigo2.txt" height="50" width="1200"></iframe>
                </div>
                <br/>
                Para utilizar os elementos da biblioteca, vamos referenciar o JSF com "h:". Um exemplo de botão com JSF: 
                
                <div class="img">
                    <br/>
                    <iframe src="codigos/codigo3.txt" height="50" width="1200"></iframe>
                </div>
                <br/>
                Para que isso funcione sem problemas, é necessário adicionar um arquivo <u>beans.xml</u> no projeto
            </p>
        </div>

        <h3>Classe Java</h3>
        <div class="text">
            <p>
                Crie uma classe chamada "PessoaController" em Java no pacote br.edu.ifsp.pep.controller. A classe precisa ter as annotations 
                <i>@Named</i> e <i>@RequestScope</i>. Crie um método para imprimir a mensagem de olá. Código da classe PessoaController: 
                <br/>
                <div class="img">
                    <iframe src="codigos/codigo4.txt" height="240" width="1200"></iframe>
                </div>
                <br/>
                A annotation de Named serve para garantir que o xhtml consegue enxergar o arquivo .class. Já a annotation RequestScope 
                define que a cada requisição será criado um novo objeto da classe. Para chamar esse método no xhtml é necessário definir o
                código de um botão (nesse caso, h:commandButton) para o código seguinte:
                <div class="img">
                    <br/>
                    <iframe src="codigos/codigo5.txt" height="50" width="1200"></iframe>
                </div>
                <br />
                Logo abaixo veremos o código executando.
            </p>
        </div>

        <h3>Primeiro exemplo JSF</h3>
        <h:form>
            Nome: <h:inputText />
            <br />
            Sobrenome: <h:inputText />
            <br />
            <h:commandButton value ="Dizer olá" action = "#{pessoaController.dizerOla}"/>
        </h:form>

        <p>Código fonte do formulário acima: </p>
        <br/>
        <div class="img">
            <iframe src="codigos/codigo6.txt" height="140" width="1200"></iframe>
        </div>
        <br/>
    </body>
    <footer>
        <a href="../index.xhtml">Retornar para página inicial</a>
    </footer>
</html>


